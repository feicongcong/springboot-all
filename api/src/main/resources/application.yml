#来自https://www.cnblogs.com/lixuwu/p/5804793.html#_label4
#1.1 配置控制台日志的debug级别:
#默认情况下，spring boot从控制台打印出来的日志级别只有ERROR,WARN,INFO，如果你想要打印debug级别
debug: true
#1.2在生产环境环境下，你可以通过命令行进行配置日志的debug级别 java -jar C:\Users\Administrator\Desktop\xx\demo.jar --debug
#1.3 配置logging.level.*来具体输出哪些包的日志级别
logging:
  level:
    root: info
    org:
      springframework:
        web: DEBUG
      hibernate: ERROR
#1.4 将日志输出到文件中
#默认情况下spring boot是不将日志输出到日志文件中，但你可以通过在application.properites文件中配置logging.file文件名称和logging.path文件路径，将日志输出到文件中
  path: E:\\fcc
  #file: demo.log
#注意：这里若不配置具体的包的日志级别，日志文件信息将为空
#若只配置logging.path，那么将会在F:\demo文件夹生成一个日志文件为spring.log（ps：该文件名是固定的，不能更改）。如果path路径不存在，会自动创建该文件夹
#若只配置logging.file，那将会在项目的当前路径下生成一个demo.log日志文件。这里可以使用绝对路径如，会自动在e盘下创建文件夹和相应的日志文件。logging.file=e:\\demo\\demo.log
#logging.path和logging.file同时配置，不会在这个路径有F:\demo\demo.log日志生成，logging.path和logging.file不会进行叠加（要注意）
#logging.path和logging.file的value都可以是相对路径或者绝对路径
#这就是基础的日志配置，可以直接在application.properties配置

#logback，Logback是由log4j创始人设计的又一个开源日志组件。logback当前分成三个模块：logback-core,logback- classic和logback-access。logback-core是其它两个模块的基础模块。logback-classic是log4j的一个 改良版本。此外logback-classic完整实现SLF4J API使你可以很方便地更换成其它日志系统如log4j或JDK14 Logging。logback-access访问模块与Servlet容器集成提供通过Http来访问日志的功能。


spring:
  datasource:
    url: jdbc:mysql://127.0.0.1:3306/fcc?useUnicode=true&characterEncoding=utf-8&useSSL=false
    username: root
    password: root
    driverClassName: com.mysql.jdbc.Driver